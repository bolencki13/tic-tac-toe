.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 9999;
  overflow: visible; /* Allow confetti to appear outside container */
  transform-origin: center; /* Explode from center */
}

.confetti-piece {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 10;
  animation: confetti-explode 1.5s ease-out forwards;
  opacity: 0;
}

.confetti-piece.square {
  border-radius: 0;
}

.confetti-piece.circle {
  border-radius: 50%;
}

.confetti-piece.triangle {
  width: 0 !important;
  height: 0 !important;
  background-color: transparent !important;
  border-style: solid;
  border-width: 0 10px 10px 10px;
  border-color: transparent transparent var(--triangle-color) transparent;
}

/* Star shape */
.confetti-piece.star {
  background-color: transparent !important;
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
}

/* Heart shape */
.confetti-piece.heart {
  background-color: transparent !important;
  width: 10px;
  height: 10px;
  position: relative;
  transform: rotate(-45deg);
}

.confetti-piece.heart:before,
.confetti-piece.heart:after {
  content: '';
  position: absolute;
  background-color: var(--heart-color);
}

.confetti-piece.heart:before {
  width: 10px;
  height: 16px;
  border-radius: 50px 50px 0 0;
  top: -8px;
  left: 0;
}

.confetti-piece.heart:after {
  width: 16px;
  height: 10px;
  border-radius: 0 50px 50px 0;
  top: 0px;
  left: 2px;
}

@keyframes confetti-explode {
  0% {
    opacity: 0;
    transform: translate(0, 0) scale(0.1) rotate(0deg);
  }
  10% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translate(var(--random-x), var(--random-y)) scale(1) rotate(var(--random-rotate));
  }
}

/* Each confetti piece gets its own animation timing */
.confetti-piece {
  animation-duration: calc(1.5s + (var(--random-speed) * 2s)); /* More consistent duration */
  will-change: transform, opacity; /* Performance optimization */
  animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1); /* Smooth standard easing */
}