.tic-tac-toe {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg, 20px);
  font-family: sans-serif;
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
  padding: var(--spacing-md, 1rem);
}

.status {
  font-size: var(--font-size-xl, 1.5rem);
  font-weight: bold;
  margin-bottom: var(--spacing-sm, 10px);
  text-align: center;
}

.board-container {
  position: relative;
  margin-bottom: var(--spacing-lg, 20px);
  /* Responsive sizing */
  --square-size: min(80px, calc((100vw - 40px) / 3));
  --board-size: calc(var(--square-size) * 3 + 4px);
  
  padding: 0;
  width: var(--board-size);
  height: var(--board-size);
  
  /* Center the board within the container */
  display: flex;
  justify-content: center;
  align-items: center;
  /* For positioning reference */
  box-sizing: content-box;
  /* For absolute positioning of winning lines */
  overflow: visible;
}

.board {
  display: flex;
  flex-direction: column;
  border: 2px solid #333;
  position: relative;
  z-index: 1;
}

.board-row {
  display: flex;
}

.square {
  width: var(--square-size);
  height: var(--square-size);
  border: 1px solid #999;
  font-size: calc(var(--square-size) * 0.5);
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  background-color: white;
  transition: background-color 0.2s;
  position: relative;
  overflow: hidden;
  touch-action: manipulation; /* Prevents double-tap to zoom on mobile */
}

.square:hover {
  background-color: #f0f0f0;
}

.square.highlighted {
  position: relative;
  border: 2px dashed #ff9800;
  background-color: #fff3e0;
}

.square.winning {
  position: relative;
  animation: pulse-win 1.5s ease-in-out infinite;
  border-color: #4CAF50;
  z-index: 1;
}

.square.winning::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(76, 175, 80, 0.1), rgba(76, 175, 80, 0.3));
  z-index: -1;
}

/* Winning line animations */
.winning-line {
  position: absolute;
  background-color: #4CAF50;
  height: min(6px, calc(var(--square-size) * 0.08));
  border-radius: min(3px, calc(var(--square-size) * 0.04));
  z-index: 2;
  transform-origin: left center;
  box-shadow: 0 0 5px rgba(76, 175, 80, 0.7);
  
  /* Pencil-like effect */
  background-image: linear-gradient(90deg, 
    #4CAF50, #66BB6A, #4CAF50, #388E3C, #4CAF50
  );
  background-size: 200% 100%;
  
  /* Realistic drawing animation */
  animation-duration: 1s;
  animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
  animation-fill-mode: forwards;
  
  /* Create a pencil-like texture */
  filter: drop-shadow(0 1px 1px rgba(0,0,0,0.1));
}

/* Line classes for different win patterns */

/* Rows */
.winning-line.row-1, .winning-line.row-2, .winning-line.row-3 {
  width: 0;
  left: calc(var(--square-size) * 0.125);
  animation-name: draw-line;
}

.winning-line.row-1 {
  top: calc(var(--square-size) * 0.5); /* Middle of first row */
}

.winning-line.row-2 {
  top: calc(var(--square-size) * 1.5); /* Middle of second row */
}

.winning-line.row-3 {
  top: calc(var(--square-size) * 2.5); /* Middle of third row */
}

/* Columns */
.winning-line.col-1, .winning-line.col-2, .winning-line.col-3 {
  height: 0;
  width: min(6px, calc(var(--square-size) * 0.08));
  top: calc(var(--square-size) * 0.125);
  animation-name: draw-line-vertical;
}

.winning-line.col-1 {
  left: calc(var(--square-size) * 0.5); /* Middle of first column */
}

.winning-line.col-2 {
  left: calc(var(--square-size) * 1.5); /* Middle of second column */
}

.winning-line.col-3 {
  left: calc(var(--square-size) * 2.5); /* Middle of third column */
}

/* SVG Diagonals */
.winning-line-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}

.diagonal-line {
  stroke: url(#greenGradient); /* Use gradient for a nicer pencil-like effect */
  stroke-width: 6;
  stroke-linecap: round;
  stroke-dasharray: 400;
  stroke-dashoffset: 400;
  animation: draw-svg-line 1s ease-out forwards;
  filter: drop-shadow(0 0 3px rgba(76, 175, 80, 0.6));
}

@keyframes draw-svg-line {
  to {
    stroke-dashoffset: 0;
  }
}

/* Animations */
@keyframes draw-line {
  0% {
    width: 0;
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    width: calc(100% - calc(var(--square-size) * 0.25));
    background-position: 0% 50%;
  }
}

@keyframes draw-line-vertical {
  0% {
    height: 0;
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    height: calc(100% - calc(var(--square-size) * 0.25));
    background-position: 0% 50%;
  }
}

@keyframes draw-line-diagonal-1 {
  0% {
    width: 0;
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    /* Responsive diagonal line */
    width: calc(var(--square-size) * 3 * 1.41); /* approximately sqrt(2) * 3 squares */
    background-position: 0% 50%;
  }
}

@keyframes draw-line-diagonal-2 {
  0% {
    width: 0;
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    /* Matching diagonal-1 for consistency */
    width: calc(var(--square-size) * 3 * 1.41); /* approximately sqrt(2) * 3 squares */
    background-position: 0% 50%;
  }
}

@keyframes pulse-win {
  0% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7); }
  70% { box-shadow: 0 0 0 10px rgba(76, 175, 80, 0); }
  100% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0); }
}

/* SVG symbol styles */
.symbol-svg {
  width: 70%;
  height: 70%;
  max-width: 56px; /* 70% of the default 80px square */
  max-height: 56px;
}

.symbol-path {
  stroke-dasharray: 200;
  stroke-dashoffset: 200;
  animation: draw-symbol 1s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
  /* Remove the dynamic stroke width to keep the stroke consistent across screens */
}

/* Specific settings for O to make the circle animation work correctly */
.o-symbol {
  stroke-dasharray: 170;
  stroke-dashoffset: 170;
}

@keyframes draw-symbol {
  to {
    stroke-dashoffset: 0;
  }
}

/* Different timing for X and O animations */
.x-symbol-1 {
  animation-duration: 0.5s;
}

.x-symbol-2 {
  animation-duration: 0.5s;
  animation-delay: 0.25s; /* Start when first stroke is halfway complete */
  animation-fill-mode: both; /* Hide before animation starts */
}

.o-symbol {
  animation-duration: 0.9s;
}

.removal-indicator {
  position: absolute;
  top: 4px;
  right: 4px;
  font-size: 1rem;
  color: #ff9800;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.reset-button {
  margin-top: var(--spacing-md, 15px);
  padding: var(--spacing-sm, 10px) var(--spacing-lg, 20px);
  font-size: var(--font-size-md, 1rem);
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
  min-height: 44px; /* Minimum touch target size */
  min-width: 120px; /* Ensure button is easy to tap */
  user-select: none; /* Prevent text selection on touch */
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on iOS */
}

.reset-button:hover {
  background-color: #45a049;
}

@media (hover: none) {
  /* Touch device specific styles */
  .reset-button {
    padding: var(--spacing-md, 15px) var(--spacing-lg, 20px);
  }
  
  /* Add active state for touch feedback */
  .reset-button:active {
    background-color: #388E3C;
    transform: scale(0.98);
  }
}